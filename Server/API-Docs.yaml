openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /signup:
    post:
      tags:
      - user-controller
      operationId: addNewUser
      description: creates new user with username and password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /allusers:
    get:
      tags:
      - user-controller
      operationId: getAllUsers_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /orders/buy:
    post:
      tags:
      - order-controller
      operationId: newOrder
      description: creates an order consisting of customer and item
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Orders'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /login:
    post:
      tags:
      - login
      operationId: createAuthenticationToken
      description: takes username and password. If correct - gives user permissions by returning a token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /items/add:
    post:
      tags:
      - item-controller
      operationId: addNewProduct
      description: creates new item with itemNumber and name
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Items'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /customer/add:
    post:
      tags:
      - customer-controller
      operationId: addNewCustomer
      description: creates new customer with name and address
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /orders/customerId:
    get:
      tags:
      - order-controller
      operationId: getOrdersByCustId_1
      description: returns orders for entered customerId
      parameters:
      - name: custId
        in: query
        required: true
        schema: 
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: 
                $ref: '#/components/schemas/Orders'
  /orders/all:
    get:
      tags:
      - order-controller
      operationId: getAllOrders_1
      description: returns all orders
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
               $ref: '#/components/schemas/Orders'
  /items/{id}:
    get:
      tags:
      - item-controller
      operationId: getitemById_1
      description: returns item by entered itemId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Items'
  /items/all:
    get:
      tags:
      - item-controller
      operationId: getAllProducts_1
      description: returns all items
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Items'
  /customer/{id}:
    get:
      tags:
      - customer-controller
      operationId: getById_1
      description: returns customer by entered customerId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Customer'
  /customer/all:
    get:
      tags:
      - customer-controller
      operationId: getAllCustomers_1
      description: returns all customers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Customer'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string
        active:
          type: integer
          format: int32
        roles:
          type: string
        permissions:
          type: string
        roleList:
          type: array
          items:
            type: string
        permissionList:
          type: array
          items:
            type: string
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        address:
          type: string
    Items:
      type: object
      properties:
        id:
          type: integer
          format: int64
        itemNumber:
          type: string
        name:
          type: string
    Orders:
      type: object
      properties:
        id:
          type: integer
          format: int64
        customer:
          $ref: '#/components/schemas/Customer'
        item:
          $ref: '#/components/schemas/Items'
